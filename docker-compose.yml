version: '2'
services:
  main:
    build: .
    depends_on:
     - mysql
     - consul
     - registrator
    volumes:
     - .:/home/node/invoice
    labels:
      SERVICE_NAME: 'invoice'
    extra_hosts:
     - 'consul:${HOST_IP}'
    environment:
      PORT: ${PORT}
      HOST_IP: ${HOST_IP}
    ports:
     - '${PORT}:${PORT}'
    command: "npm run dev"

  customer:
    image: opuscapita/customer:dev
    depends_on:
      - mysql
      - consul
      - registrator
    labels:
      SERVICE_NAME: 'customer'
    environment:
      PORT: ${CUSTOMER_PORT}
      HOST_IP: ${HOST_IP}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
    extra_hosts:
      - 'consul:${HOST_IP}'
    ports:
       - '${CUSTOMER_PORT}:${CUSTOMER_PORT}'
    command: 'npm run dev'

  mysql:
    image: "mysql:5.6"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    depends_on:
      - registrator

  registrator:
    image: gliderlabs/registrator:latest
    network_mode: host
    depends_on:
     - consul
    volumes:
     - /var/run/docker.sock:/tmp/docker.sock
    command: ['consul://${HOST_IP}:8500']

  nginx:
    image: gr4per/nginx-rp:dev
    ports:
     - '8080:8080'
    depends_on:
     - main
     - customer
     - registrator
    environment:
      PORT: '8080'
      DOCKER_CONTAINERS_HOST_EXTERNAL_PORT: 8080
    expose:
      - '8080'
    labels:
      SERVICE_NAME: 'nginx'

  consul:
    image: consul:latest
    network_mode: host
    ports:
      - '8400:8400'
      - '8500:8500'
      - '8600:53/udp'
    labels:
      SERVICE_IGNORE: 'true'  # Do not add any of Consul's services to Consul's service discovery registry.
    command: [agent, '-server', '-ui', '-bootstrap-expect=1', '-bind=${HOST_IP}', '-client=0.0.0.0']
